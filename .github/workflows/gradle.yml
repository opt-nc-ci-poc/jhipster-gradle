# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v3
      with:
        node-version: 18.18.1
        cache: 'npm'
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@342dbebe7272035434f9baccc29a816ec6dd2c7b
    - name: Build with Gradle
      uses: gradle/gradle-build-action@842c587ad8aa4c68eeba24c396e15af4c2e9f30a # v2.9.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        arguments: |
          -Pprod check jacocoTestReport sonarqube build -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=${{ github.repository_owner }} -Dsonar.projectKey=${{ github.repository_owner }}_jhipster-gradle
          jib --image=ghcr.io/${{ github.repository }}:develop \
              -Djib.container.creationTime=USE_CURRENT_TIMESTAMP \
              -Djib.container.labels=org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository}}
        dependency-graph: generate-and-submit

    - uses: actions/upload-artifact@v3
      with:
        name: app.jar
        path: build/libs/*.jar
