# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18.18.1
          cache: 'npm'
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@342dbebe7272035434f9baccc29a816ec6dd2c7b
      - name: Build with Gradle
        uses: gradle/gradle-build-action@842c587ad8aa4c68eeba24c396e15af4c2e9f30a # v2.9.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          arguments: |
            --info
            -Pprod check jacocoTestReport
            sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=${{ github.repository_owner }} -Dsonar.projectKey=${{ github.repository_owner }}_jhipster-gradle
          dependency-graph: generate-and-submit

      - uses: actions/upload-artifact@v3
        with:
          name: app.jar
          path: build/libs/*.jar

      - name: üîê Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build
        if: github.ref == 'refs/heads/main'
        uses: gradle/gradle-build-action@842c587ad8aa4c68eeba24c396e15af4c2e9f30a # v2.9.0
        with:
          arguments: |
            jib --image=ghcr.io/${{ github.repository }}:develop -Djib.container.creationTime=USE_CURRENT_TIMESTAMP -Djib.container.labels=org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository}}
          dependency-graph: disable

      # Setup gcloud CLI
      - uses: google-github-actions/auth@v1
        if: github.ref == 'refs/heads/main'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

          # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v1
        if: github.ref == 'refs/heads/main'
        with:
          cluster_name: ${{ vars.GKE_CLUSTER }}
          location: ${{ vars.GKE_ZONE }}

      # Deploy the Docker image to the GKE cluster
      - name: üöÄ Deploy k8s
        if: github.ref == 'refs/heads/main'
        run: |-
          cat <<EOF >./kustomization.yaml
          resources:
            - k8s/
          patches:
            - target:
                kind: Deployment
              # Positionne les secret pour le pull de l'image depuis ghcr.io
              # Force le pull de l'image depuis ghcr.io (pour les images √† tag fixe)
              patch: |
                - op: replace
                  path: /spec/template/spec/imagePullSecrets
                  value:
                    - name: ghcr.io
                - op: replace
                  path: /spec/template/spec/containers/0/imagePullPolicy
                  value: Always
          EOF
          kubectl -n opt-nc-ci-poc apply -k .
          kubectl -n opt-nc-ci-poc rollout status deployment/jhipster-gradle
          kubectl -n opt-nc-ci-poc get services -o wide
